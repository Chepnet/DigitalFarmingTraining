
@using PagedList.Mvc;
@using PagedList;
@model IEnumerable<WebApplication2.FarmersTraining>

@*@model WebApplication2.FarmersTraining*@



@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Search</h2>
@*@Html.ActionLink("Back", "Index", "FarmersTrainings")*@
@using(Html.BeginForm("Index1", "FarmersTrainings", FormMethod.Get))
{

    <b> Search Option: </b>@Html.RadioButton("option", "Event") <text>Event</text> @Html.RadioButton("option", "TrainerName") <text> TrainerName </text>
    @Html.RadioButton("option", "TrainingTime")<text>TrainingTime</text> @Html.TextBox("search") <input type="submit" name="submit" value="Search" />
    @Html.ActionLink("Event List", "Index","FarmersTrainings")

}
<table class="table"
       border="1">
    <tr>
        <th>
            @Html.ActionLink("Event", "Index1", new
                        {
                            sort = ViewBag.SortByEvent,
                            option = Request.QueryString["option"],
                            search = Request.QueryString["search"]
        })
        </th>
        <th> @Html.DisplayNameFor(model => model.Description) </th>
        <th>
            @Html.ActionLink("TrainerName", "Index1", new { sort = ViewBag.SortByTrainerName, option = Request.QueryString["option"], search = Request.QueryString["search"]
    })
        </th>
        <th> @Html.DisplayNameFor(model => model.TrainingTime) </th>
    </tr>

    @if(Model.Count() == 0)
    {
    <tr>
        <td colspan = "3" > Records not found</td>
       </tr>
    }
    else
    {

        foreach (var item in Model)
        {
    <tr>
        <td> @Html.DisplayFor(modelItem => item.EventName) </td>
        <td> @Html.DisplayFor(modelItem => item.Description) </td>
        <td>
            @Html.DisplayFor(modelItem => item.TrainerName)
        </td>
        <td> @Html.DisplayFor(modelItem => item.TrainingTime) </td>
        <td> @Html.ActionLink(" View Details", "Details", new { id = item.TrainingId })</td>


    </tr>
  
        }
    }
</table>

@*@Html.PagedListPager(Model, pageNumber => Url.Action("Search", new{
    pageNumber,
    option = Request.QueryString["option"],
    search = Request.QueryString["search"],
    sort = Request.QueryString["sort"]*@
@*}))*@

